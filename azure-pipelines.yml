trigger:
- main  # Rama que activar√° el pipeline

# üîπ Usar tu agente local
pool:
  name: Default   # O el pool donde registraste tu agente local

variables:
  SONARQUBE_PROJECT_KEY: 'Veganimo_Veganimo_df0f75ee-e17c-41a0-9241-828eda13ff43'
  SONARQUBE_PROJECT_NAME: 'Veganimo'
  SONARQUBE_SERVICE_CONNECTION: 'Veganimo'  # Nombre de tu service connection en Azure DevOps

steps:
# 1Ô∏è‚É£ Preparar SonarQube
- task: SonarQubePrepare@5
  inputs:
    SonarQube: '$(SONARQUBE_SERVICE_CONNECTION)'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(SONARQUBE_PROJECT_KEY)'
    cliProjectName: '$(SONARQUBE_PROJECT_NAME)'
    cliSources: '.'
    jdkVersionOption: '1.17'   # Forzar Java 17

# 2Ô∏è‚É£ Build o tarea de tu proyecto
- script: |
    REM Aqu√≠ ir√≠a tu build o compilaci√≥n
    echo "Simulando build del proyecto..."
    REM Ejemplo para Node.js:
    REM npm install
    REM npm run build
  displayName: 'Run Build'

# 3Ô∏è‚É£ Ejecutar an√°lisis de SonarQube
- task: SonarQubeAnalyze@5
  displayName: 'Run SonarQube Analysis'

# 4Ô∏è‚É£ Publicar resultados en SonarQube
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
